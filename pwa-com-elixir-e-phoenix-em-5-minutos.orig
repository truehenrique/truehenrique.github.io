<!DOCTYPE html>
<html lang="pt">
  <head>
    <script data-ad-client="ca-pub-1640512874906863" async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-161733672-1"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());

      gtag('config', 'UA-161733672-1');
    </script>
    <title>PWA com Elixir e Phoenix em 5 minutos!</title>
    <meta property="og:image" content="https://truehenrique.com/images/uploads/posts/pwa-com-elixir-e-phoenix-em-5-minutos/original.png?v=63767219677">
    <meta name="twitter:image:src" content="https://truehenrique.com/images/uploads/posts/pwa-com-elixir-e-phoenix-em-5-minutos/original.png?v=63767219677">
    <meta property="og:type" content="article" />
    <meta property="article:author" content="https://www.truehenrique.com/sobre">
    <meta property="og:site_name" content="true |> henrique" />
    <meta property="og:description" content="Construir um PWA (Progressive Web App) é uma maneira de possibilitar que sua aplicação web escrita em html, css e javascript funcione praticamente como um aplicativo para smartphones, desktops e tablets." />
    <meta property="twitter:description" content="Construir um PWA (Progressive Web App) é uma maneira de possibilitar que sua aplicação web escrita em html, css e javascript funcione praticamente como um aplicativo para smartphones, desktops e tablets.">
    <meta name="description" content="Construir um PWA (Progressive Web App) é uma maneira de possibilitar que sua aplicação web escrita em html, css e javascript funcione praticamente como um aplicativo para smartphones, desktops e tablets.">
    <meta name="twitter:card" content="summary_large_image">
    <meta name="robots" content="index,follow">
    <meta name="keywords" content="elixir,pwa,phoenix,web,apps,progressive">
    <meta property="og:title" content="PWA com Elixir e Phoenix em 5 minutos!" />
    <meta property="twitter:title" content="PWA com Elixir e Phoenix em 5 minutos!">
    <meta name="title" content ="PWA com Elixir e Phoenix em 5 minutos!">
    <meta property="og:url" content="https://www.truehenrique.com/pwa-com-elixir-e-phoenix-em-5-minutos">
    <link rel="canonical" href="https://www.truehenrique.com/pwa-com-elixir-e-phoenix-em-5-minutos"/>
    <link rel="author" href="https://www.truehenrique.com/sobre">
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="author" content="Henrique Fernandez Teixeira">

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/foundation-sites@6.5.0-rc.3/dist/css/foundation.min.css" integrity="sha256-b2khkeAav/7kTh0Bs5h1Xw1kqGL56SziJ5zk6bEvnAw= sha384-7nP0F9FVCI9Qg1SfsjHWQd+4ksCAxlF5pibRyPGxwn7NJpu1XuSaOoMh8JHIDSdk sha512-Rcgo7Zj9clxZoGtt4CBj1aEtCL9gBd64nYl3hkKEuWDwtK7hKY6c4D5vL4njDseuz31u1WWSM42SbvYe/3CZYQ==" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/foundicons/3.0.0/foundation-icons.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.2.0/css/flag-icon.css" />
    <link rel="manifest" href="/manifest.json">
    <link href='/css/app.css' rel="stylesheet" type="text/css">
    <link rel="stylesheet"
          href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.18.1/styles/default.min.css">

    <script src='https://www.google.com/recaptcha/api.js'></script>
    <script src="https://unpkg.com/unpoly@0.62.1/dist/unpoly.min.js" integrity="sha384-4PWpXaib3dqJ5r6dXwq3YOW0OFmH7NTjH697AUQR7W4Q0F+GqP+dD0SrBfIc9b2t" crossorigin="anonymous"></script>
    <script>
      if (navigator.serviceWorker) {
        navigator.serviceWorker.register('/service_worker.js', { scope: './' })
          .then(function(reg) {
            console.log('[Companion]', 'Service worker registered!');
            console.log(reg);
          });
      }
    </script>
  </head>
  <body>
  <div>
    <nav>
      <ul class="menu align-center">
        <li><a  href="/" class="active_link"><i class="fi-page-multiple"></i> Blog</a></li>
        <li><a  href="/sobre" class=""><i class="fi-torso-business"></i> Sobre</a></li>
        <li><a href="/contato" class=""><i class="fi-mail"></i> Contato</a></li>
      </ul>
    </nav>
  </div>
  <div class="after-nav-container">
    <div class="social-networks">
      <a href="https://www.linkedin.com/in/henrique-fernandez-teixeira-93a4a3127/" target="_blank"><i class="fi-social-linkedin large"></i></a>
      <a href="https://www.instagram.com/henrique.ft/" target="_blank"><i class="fi-social-instagram large"></i></a>
      <a href="https://github.com/henriquefernandez" target="_blank"><i class="fi-social-github large"></i></a>
    </div>

  </div>
<div id="fb-root"></div>
    <script async defer crossorigin="anonymous" src="https://connect.facebook.net/es_ES/sdk.js#xfbml=1&version=v6.0"></script>

<div class="grid-container post-container">
  <div class="grid-x">
    <div class="cell small-12 medium-8">
      <div class="post-header">
        <h1 class="post-title">PWA com Elixir e Phoenix em 5 minutos!</h1>
      </div>

          <div class="post-image">
              <div class="thumbnail" style="background-image: url(
              /images/uploads/posts/pwa-com-elixir-e-phoenix-em-5-minutos/original.png?v=63767219677);" alt="PWA com Elixir e Phoenix em 5 minutos!"></div>
          </div>

      <div class="post-content">
        <br>
<div>Construir um <em>PWA (Progressive Web App)</em> é uma maneira de possibilitar que sua aplicação <em>web </em>escrita em <em>html</em>, <em>css</em> e <em>javascript</em> funcione praticamente como um aplicativo para <em>smartphones</em>, <em>desktops </em>e<em> tablets</em> podendo inclusive ser instalada, ter <em>"push notifications" </em>e funcionamento completamente <em>offline</em>. Nesse <em>post</em> não vou me aprofundar tanto no conceito, mas mostrarei como é simples e rápido transformar um projeto <em>Elixir</em> e <em>Phoenix</em> em um <em>PWA.</em>&nbsp;<br><br></div><div>Vamos aos passos para criar o seu <em>PWA</em> com <em>Elixir e Phoenix</em>:</div><h3><br></h3><h3>Passo 1:</h3><div><br>Adicione um arquivo chamado <strong><em>manifest.json</em></strong> no seu<em> priv/static </em>contendo o seguinte conteúdo:</div><div><br></div><pre><code class='javascript'>{
  "short_name": "My App", // Nome em que aparecerá junto ao ícone
  "name": "My Very Progressive Web App @PWA", // Descrição que aparecerá enquanto o aplicativo é carregado
  "icons": [ // Coloque aqui a localização dos ícones do seu aplicativo
    {
      "src": "/images/logo.png",  
      "type": "image/png"
    }
  ],
  "start_url": "/", // Aqui vai o endereço principal do seu aplicativo (o que irá ser acessado primeiro quando abrirmos o app)
  "background_color": "#fff", // Definimos uma cor de fundo enquanto ao aplicativo é carregado.
  "display": "standalone", // Definimos o modo primário que o navegador deve considerar para exibir o aplicativo.
  "scope": "/", // Definimos o escopo, limite, das páginas a serem consideradas como PWA
  "theme_color": "#000"   // Definimos uma cor para personalizar a interface do dispositivo em uso
} 
            <em>                                 </em></code></pre><div><br>Este arquivo é o responsável por personalizar a aparência do nosso <em>PWA</em> e um pouco da experiência de uso. Além das configurações setadas acima, também podemos adicionar as seguintes:<br><br></div><ul><li><em>lang</em>: Definimos o idioma utilizado (ex: <em>pt-BR</em>).</li><li><em>orientation</em>: Definimos a orientação de como exibir o aplicativo (ex: <em>any, natural, landscape, landscape-primary, landscape-secondary, portrait, portrait-primary, portrait-secondary</em>).</li><li><em>prefer_related_applications</em>: Informa se há uma outra aplicação complementar (<em>Boolean</em>).</li><li><em>related_applications</em>: Definimos as aplicações complementares (<em>Array</em> de objetos de aplicações com os possíveis valores: <em>platform, url e id</em>).</li><li><em>dir</em>: Definimos a direção do texto nas especifcações do manifesto.</li></ul><div><br>Para agilizar o processo de criação do nosso <strong><em>manifest.json</em></strong> podemos recorrer a ferramentas de automatização. Esse site é bem eficiente e também nos ajuda a gerar os ícones formatados:<br><br><a href="https://app-manifest.firebaseapp.com/">https://app-manifest.firebaseapp.com/</a></div><div><br></div><h3>Passo 2:</h3><div><br>Adicione um arquivo chamado <strong><em>service_worker.js</em></strong> no seu <em>priv/static</em> contendo o seguinte conteúdo:<br><br></div><pre><code class='javascript'>self.addEventListener('install', function(e) {
  e.waitUntil(
    fetch('/cache_manifest.json')
    .then(function(response) {
      return response.json()
    })  
    .then(function(cacheManifest) {
      var cacheName = 'cache:static:' + cacheManifest.version
      var all = Object.values(cacheManifest.latest).filter(
        function(fn) { return fn.match(/^(images|css|js|fonts)/);
        })
      caches.open(cacheName).then(function(cache) {
        return cache.addAll(all).then(function() {
          self.skipWaiting();
        });
      })
    })
  );
});

self.addEventListener('fetch', function(event) {
  event.respondWith(
    caches.match(event.request).then(function(response) {
      if (response) {
        return response;
      }
      return fetch(event.request);
    })
  );
});</code></pre><div><br></div><blockquote>Essencialmente, um <em>service worker</em> se comporta como um servidor <em>proxy</em> situado entre uma aplicação web, o navegador e a rede (quando esta estiver disponível). Eles servem, dentre outras coisas, para possibilitar a criação de experiências <em>offline</em> eficientes, interceptar requisições de rede – agindo adequadamente de acordo com o <em>status</em> atual da conexão – e atualizar os <em>assets</em> que residem no servidor. Service workers também permitem o acesso às APIs de <em>push notification</em> e <em>background sync</em>.<br><br>- <a href="https://developer.mozilla.org/pt-BR/docs/Web/API/Service_Worker_API">https://developer.mozilla.org/pt-BR/docs/Web/API/Service_Worker_API</a></blockquote><div><br>No nosso caso, estamos escutando a dois eventos <em>"install" e "fetch"</em>.<br><br></div><ul><li><em>install</em>: Na hora da instalação do aplicativo informamos a localização do nosso<strong><em> cache_manifest.json. </em></strong>Uma vantagem de utilizar o<em> framework Phoenix </em>para <em>PWA's </em>é que ele gera automaticamente este arquivo quando rodamos a <em>task </em><strong><em>mix phx.digest</em></strong>! Este arquivo é responsável por informar dados de <em>cache</em> que são utilizados para o aplicativo funcionar de forma mais rápida, econômica e até de maneira <em>offline </em>dependendo do caso.</li><li><em>fetch</em>: É disparado quando houver uma visita a uma <em>url</em>, se já tivermos cache, responde com o cache, se não executamos o fluxo normal.</li></ul><div><br></div><h3>Passo 3:</h3><div><br>Permita que os arquivos <strong><em>service_worker.js</em></strong>, <strong><em>cache_manifest.json </em></strong>e <strong><em>manifest.json</em></strong> sejam acessados de forma estática, adicionando nas configurações de <strong><em>Plug.Static</em></strong>, encontradas no módulo <strong><em>Endpoint</em></strong> do seu projeto encontrado em<em> (lib/seu_projeto_web/endpoint.ex):</em><br><br></div><pre><code class='elixir'>plug Plug.Static,
  at: "/",
  from: :seu_projeto,
  gzip: false,
  only: ~w(css fonts images js favicon.ico robots.txt service_worker.js cache_manifest.json manifest.json) # aqui</code></pre><div><br><br></div><h3>Passo 4:</h3><div><br>Adicione um link para o seu <strong><em>manifest.json</em></strong> e o seguinte script no layout principal do seu projeto:<br><br></div><pre><code class='html'>&lt;link rel="manifest" href="/manifest.json"&gt;
&lt;script&gt;
  if (navigator.serviceWorker) {
    navigator.serviceWorker.register('/service_worker.js', { scope: './' })
      .then(function(reg) {
        console.log('[ServiceWorker]', 'Service worker registered!');
        console.log(reg);
      });
  }
&lt;/script&gt;</code></pre><div><br>Este <em>script</em> basicamente registra o nosso <em>service worker </em>no navegador.<br><br>É isso! nossa <em>PWA</em> está pronta. <br><br>Este blog é uma <em>PWA</em> com <em>Elixir</em>! Se você estiver acessando este artigo através do celular e quiser ver o resultado dos passos acima, clique nas configurações do navegador e em seguida "Adicionar a tela inicial". Se estiver vendo no <em>desktop</em>, provavelmente o seu navegador terá um botão como na imagem abaixo: <br><br><figure data-trix-attachment="{&quot;contentType&quot;:&quot;image/gif&quot;,&quot;filename&quot;:&quot;pwagif.gif&quot;,&quot;filesize&quot;:77425,&quot;height&quot;:334,&quot;href&quot;:&quot;/bucket/pwagif.gif?content-disposition=attachment&quot;,&quot;url&quot;:&quot;/bucket/pwagif.gif&quot;,&quot;width&quot;:854}" data-trix-content-type="image/gif" data-trix-attributes="{&quot;caption&quot;:&quot;Exemplo&quot;,&quot;presentation&quot;:&quot;gallery&quot;}" class="attachment attachment--preview attachment--gif"><a href="/bucket/pwagif.gif?content-disposition=attachment"><img src="/bucket/pwagif.gif" width="854" height="334"><figcaption class="attachment__caption attachment__caption--edited">Exemplo</figcaption></a></figure><br><br>Se gostou do conteúdo, você pode assinar o <em>newsletter</em> para sempre se atualizar quando houver novos <em>posts</em>! Prometo que não vou "lotar" a sua caixa de <em>email</em> com <em>spam</em> :D<br><br><em>links</em> e fontes:<br><em><br></em><a href="https://www.botsquad.com/2018/03/07/phoenix-sw/"><em>https://www.botsquad.com/2018/03/07/phoenix-sw/</em></a><em><br></em><a href="https://blog.apiki.com/web-app-manifest/"><em>https://blog.apiki.com/web-app-manifest/</em></a><a href="https://gobacklog.com/blog/progressive-web-apps/"><em><br>https://gobacklog.com/blog/progressive-web-apps/</em></a></div><div><a href="https://vizir.com.br/2017/08/o-que-e-pwa-progressive-web-app-porque-isso-pode-aumentar-seus-resultados-mobile/"><em>https://vizir.com.br/2017/08/o-que-e-pwa-progressive-web-app-porque-isso-pode-aumentar-seus-resultados-mobile/</em></a><em><br></em><a href="https://developer.mozilla.org/pt-BR/docs/Web/API/Service_Worker_API"><em>https://developer.mozilla.org/pt-BR/docs/Web/API/Service_Worker_API</em></a></div><div><br><br><br></div>        <br>
        <hr>
        <br>
        <div class="fb-comments" data-href="https://truehenrique.com/pwa-com-elixir-e-phoenix-em-5-minutos" data-width="" data-numposts="10"></div>
      </div>
    </div>
    <div class="cell small-12 medium-4">
      <div class="post-aside">
        <h5>Newsletter</h5>
        <small>Fique por dentro de todas as novidades do blog</small>
        <hr>
<form accept-charset="UTF-8" action="/newsletter" method="post"><input name="_csrf_token" type="hidden" value="PX1GWAI1K1wwPzAkURFxfiguWwMnago3U4u3iAxdfpRG8k0KrVvlHGEr"><input name="_utf8" type="hidden" value="✓">          <div class="input-group">
            <span class="input-group-label"><i class="fi-mail"></i></span>
<input id="post_slug" name="post_slug" type="hidden" value="pwa-com-elixir-e-phoenix-em-5-minutos"><input class="input-group-field" id="newsletter_email" name="newsletter[email]" placeholder="Digite seu email" required="true" type="email">          </div>
<button class="button newsletter-button" type="submit">Assinar</button></form>      </div>
    </div>
  </div>
</div>
<br>
<br>
    <footer class="social-footer">
      @truehenrique
      <div class="social-footer-left">
        <a href="/arquivo" class="button hollow"><i class="fi-list-bullet"></i> Arquivo</a>
      </div>
    </footer>
    <script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.18.1/highlight.min.js"></script>
    <script src='/js/app.js'></script>
  </body>
</html>
